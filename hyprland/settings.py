""" This file is generated by util/scraper.py """

from . import sockets

class General(sockets.command):

    sensitivity = 1.0
    """ mouse sensitivity (legacy, may cause bugs if not 1, prefer input:sensitivity) """

    border_size = 1
    """ self-explanatory """

    no_border_on_floating = False
    """ disable borders for floating windows """

    gaps_in = 5
    """ gaps between windows """

    gaps_out = 20
    """ gaps between windows and monitor edges """

    col__inactive_border = '0xffffffff'
    """ self-explanatory """

    col__active_border = '0xff444444'
    """ self-explanatory """

    cursor_inactive_timeout = 0
    """ in seconds, after how many seconds of cursor’s inactivity to hide it. Set to 0 for never. """

    layout = 'dwindle'
    """ which layout to use. (Available: dwindle, master) """

    no_cursor_warps = False
    """ if true, will not warp the cursor in many cases (focusing, keybinds, etc) """

    apply_sens_to_raw = False
    """ if on, will also apply the sensitivity to raw mouse output (e.g. sensitivity in games) NOTICE: really not recommended. """

class Decoration(sockets.command):

    rounding = 0
    """ rounded corners’ radius (in layout px) """

    multisample_edges = True
    """ enable antialiasing (no-jaggies) for rounded corners """

    active_opacity = 1.0
    """ self-explanatory, only for windows. (0.0 - 1.0) """

    inactive_opacity = 1.0
    """ self-explanatory, only for windows. (0.0 - 1.0) """

    fullscreen_opacity = 1.0
    """ self-explanatory, only for windows. (0.0 - 1.0) """

    blur = True
    """ enable kawase window background blur """

    blur_size = 8
    """ blur size (distance) """

    blur_passes = 1
    """ the amount of passes to perform """

    blur_ignore_opacity = False
    """ make the blur layer ignore the opacity of the window """

    blur_new_optimizations = True
    """ whether to enable further optimizations to the blur. Recommended to leave on, as it will massively improve performance. """

    blur_xray = False
    """ if enabled, floating windows will ignore tiled windows in their blur. Only available if blur_new_optimizations is true. Will reduce overhead on floating blur significantly. """

    drop_shadow = True
    """ enable drop shadows on windows """

    shadow_range = 4
    """ Shadow range (“size”) in layout px """

    shadow_render_power = 3
    """ (1 - 4), in what power to render the falloff (more power, the faster the falloff) """

    shadow_ignore_window = True
    """ if true, the shadow will not be rendered behind the window itself, only around it. """

    col__shadow = 3994688026
    """ shadow’s color. Alpha dictates shadow’s opacity. """

    col__shadow_inactive = None
    """ inactive shadow color. (if not set, will fall back to col.shadow) """

    shadow_offset = '[0, 0]'
    """ shadow’s rendering offset. """

    shadow_scale = 1.0
    """ shadow’s scale. 0.0 - 1.0 """

    dim_inactive = False
    """ enables dimming of inactive windows """

    dim_strength = 0.5
    """ how much inactive windows should be dimmed, 0.0 - 1.0 """

    screen_shader = None
    """ a path to a custom shader to be applied at the end of rendering. See examples/screenShader.frag for an example. """

class Animations(sockets.command):

    enabled = True
    """ enable animations """

class Input(sockets.command):

    kb_model = None
    """ Appropriate XKB keymap parameter. See the note below. """

    kb_layout = 'us'
    """ Appropriate XKB keymap parameter """

    kb_variant = None
    """ Appropriate XKB keymap parameter """

    kb_options = None
    """ Appropriate XKB keymap parameter """

    kb_rules = None
    """ Appropriate XKB keymap parameter """

    kb_file = None
    """ If you prefer, you can use a path to your custom .xkb file. """

    numlock_by_default = False
    """ Engage numlock by default. """

    repeat_rate = 25
    """ The repeat rate for held-down keys, in repeats per second. """

    repeat_delay = 600
    """ Delay before a held-down key is repeated, in milliseconds. """

    sensitivity = 0.0
    """ Sets the mouse input sensitivity. Value will be clamped to the range -1.0 to 1.0. libinput#pointer-acceleration """

    accel_profile = None
    """ Sets the cursor acceleration profile. Can be one of adaptive, flat. Leave empty to use libinput’s default mode for your input device. libinput#pointer-acceleration """

    force_no_accel = False
    """ Force no cursor acceleration. This bypasses most of your pointer settings to get as raw of a signal as possible. Enabling this is not recommended due to potential cursor desynchronization. """

    left_handed = False
    """ Switches RMB and LMB """

    scroll_method = None
    """ Sets the scroll method. Can be one of 2fg (2 fingers), edge, on_button_down, no_scroll. libinput#scrolling """

    scroll_button = 0
    """ Sets the scroll button. Has to be an int, cannot be a string. Check wev if you have any doubts regarding the ID. 0 means default. """

    natural_scroll = False
    """ Inverts scrolling direction. When enabled, scrolling moves content directly instead of manipulating a scrollbar. """

    follow_mouse = 1
    """ (0/1/2/3) Specify if and how cursor movement should affect window focus. See the note below. """

    float_switch_override_focus = 1
    """ If enabled (1 or 2), focus will change to the window under the cursor when changing from tiled-to-floating and vice versa. If 2, focus will also follow mouse on float-to-float switches. """

class Gestures(sockets.command):

    workspace_swipe = False
    """ enable workspace swipe gesture """

    workspace_swipe_fingers = 3
    """ how many fingers for the gesture """

    workspace_swipe_distance = 300
    """ in px, the distance of the gesture """

    workspace_swipe_invert = True
    """ invert the direction """

    workspace_swipe_min_speed_to_force = 30
    """ minimum speed in px per timepoint to force the change ignoring cancel_ratio. Setting to 0 will disable this mechanic. """

    workspace_swipe_cancel_ratio = 0.5
    """ (0.0 - 1.0) how much the swipe has to proceed in order to commence it. (0.7 -> if > 0.7 * distance, switch, if less, revert) """

    workspace_swipe_create_new = True
    """ whether a swipe right on the last workspace should create a new one. """

    workspace_swipe_forever = False
    """ if enabled, swiping will not clamp at the neighboring workspaces but continue to the further ones. """

class Misc(sockets.command):

    disable_hyprland_logo = False
    """ disables the hyprland logo background. :( """

    disable_splash_rendering = False
    """ disables the hyprland splash rendering. (requires a monitor reload to take effect) """

    no_vfr = True
    """ disables VFR (variable frame rate) - VFR increases battery life at the expense of possible issues on a few monitors. """

    mouse_move_enables_dpms = False
    """ If DPMS is set to off, wake up the monitors if the mouse moves. """

    always_follow_on_dnd = True
    """ Will make mouse focus follow the mouse when drag and dropping. Recommended to leave it enabled, especially for people using focus follows mouse at 0. """

    layers_hog_keyboard_focus = True
    """ If true, will make keyboard-interactive layers keep their focus on mouse move (e.g. wofi, bemenu) """

    animate_manual_resizes = False
    """ If true, will animate manual window resizes/moves """

    disable_autoreload = False
    """ If true, the config will not reload automatically on save, and instead needs to be reloaded with hyprctl reload. Might save on battery. """

    enable_swallow = False
    """ Enable window swallowing """

    swallow_regex = None
    """ The class regex to be used for windows that should be swallowed (usually, a terminal) """

    focus_on_activate = False
    """ Whether Hyprland should focus an app that requests to be focused (an activate request) """

    no_direct_scanout = False
    """ Disables direct scanout. Direct scanout attempts to reduce lag when there is only one fullscreen application on a screen (e.g. game) """

class Binds(sockets.command):

    pass_mouse_when_bound = False
    """ if disabled, will not pass the mouse events to apps / dragging windows around if a keybind has been triggered. """

    scroll_event_delay = 300
    """ in ms, how many ms to wait after a scroll event to allow to pass another one for the binds. """

    workspace_back_and_forth = False
    """ If enabled, an attempt to switch to the currently focused workspace will instead switch to the previous workspace. Akin to i3’s auto_back_and_forth. """

    allow_workspace_cycles = False
    """ If enabled, workspaces don’t forget their previous workspace, so cycles can be created by switching to the first workspace in a sequence, then endlessly going to the previous workspace. """


class Defaults:

    def __init__(self):
        self.general = General()
        self.decoration = Decoration()
        self.animations = Animations()
        self.input = Input()
        self.gestures = Gestures()
        self.misc = Misc()
        self.binds = Binds()
